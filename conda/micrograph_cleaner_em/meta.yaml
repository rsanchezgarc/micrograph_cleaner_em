{% set name = "micrograph-cleaner-em" %}
{% set version = "0.37" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "26c551341750cf55eef458c3c74de145e0b3be6ef256ff5d83dce8de58783bad" %}
package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/m/micrograph-cleaner-em/micrograph_cleaner_em-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  entry_points:
    - cleanMics=micrograph_cleaner_em.cleanMics:commanLineFun
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python {{ python }}
    - setuptools
    - numpy==1.15.4
    - scikit-image==0.14.2
    - joblib==0.12
    - tensorflow-gpu==1.12
    - _tflow_select==2.1.0 gpu
    - pandas==0.24
    - mrcfile==1.1
    - requests==2.22
  run:
    - python
    - setuptools
    - numpy==1.15.4
    - scikit-image==0.14.2
    - joblib==0.12
    - tensorflow-gpu==1.12
    - _tflow_select==2.1.0 gpu
    - pandas==0.24
    - mrcfile==1.1
    - requests==2.22

test:
  imports:
    - micrograph_cleaner_em
  commands:
    - cleanMics --help

about:
  home: https://github.com/rsanchezgarc/micrograph_cleaner_em
  license: Apache 2.0
  license_family: APACHE
  license_file: ''
  summary: Deep learning for cryo-EM micrograph cleaning
  description: "#micrograph_cleaner_em\n**micrograph_cleaner_em** is a python package designed to segment cryo-EM micrographs into:\n\n  -carbon/high-contrast region \n  -normal regions\n  \nso that incorrectly picked\
    \ coordinates can be easily ruled out\n\nTo get a complete description of usage execute\n\n`cleanMics -h`\n\nExample\n\n`cleanMics  -c /home/rsanchez/ScipionUserData/projects/2dAverages_embeddings/Runs/008337_XmippParticlePickingAutomatic/extra/\
    \ -o ~/tmp/micrograph_cleaner_em/coordsCleaned/ -b 180 -s 1.0   --inputMicsPath  /home/rsanchez/ScipionUserData/projects/2dAverages_embeddings/Runs/002321_ProtImportMicrographs/extra/stack_0002_2x_SumCorr.mrc\
    \ --predictedMaskDir /home/rsanchez/tmp/micrograph_cleaner_em/micsPreds --deepThr 0.5`\n\n\n##INSTALLATION:\n\n###pip/setup option:\n\n1) install cuda and cudnn so that tensorflow (https://www.tensorflow.org/)\
    \ can be executed. This program is compatible\n   with CUDA-8,CUDA-9 and CUDA-10. Please refere to tensorflow installation guide to ensure cudnn and cuda vesrsions are\n   compatible. Tensorflow will\
    \ be automatically installed later.\n\n2) Install micrograph_cleaner_em\n`git clone https://github.com/rsanchezgarc/micrograph_cleaner_em.git; cd micrograph_cleaner_em; python setup.py install`\n  or\n`pip install micrograph_cleaner_em`\n\
    \n3) Download deep learning model\n  `cleanMics --download`\n  \n4) execute cleanMics command\n\n```\ncleanMics  -c /home/rsanchez/ScipionUserData/projects/2dAverages_embeddings/Runs/008337_XmippParticlePickingAutomatic/extra/\
    \ -o ~/tmp/micrograph_cleaner_em/coordsCleaned/ -b 180 -s 1.0   --inputMicsPath  /home/rsanchez/ScipionUserData/projects/2dAverages_embeddings/Runs/002321_ProtImportMicrographs/extra/stack_0002_2x_SumCorr.mrc\
    \ --predictedMaskDir /home/rsanchez/tmp/micrograph_cleaner_em/micsPreds --deepThr 0.5\n```\n\nIf cuda not found, export its path\n```\nexport LD_LIBRARY_PATH=/path/to/cuda/cuda-9.0/lib64:$LD_LIBRARY_PATH\n\
    ```\nand then execute cleanMics"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
